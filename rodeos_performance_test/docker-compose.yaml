
x-logging:
   logging: &logging
     driver: loki
     options:
       loki-url: "http://localhost:3100/loki/api/v1/push"
       loki-batch-size: "400"
       no-file: "false"
       keep-file: "true"
       max-size: "5m"
       max-file: "3"

version: "3.9"
services:
   jaeger-collector:
      image: jaegertracing/jaeger-collector
      command: ["--es.num-shards=1", "--es.num-replicas=0", "--es.server-urls=http://elasticsearch:9200", "--collector.zipkin.host-port=:9411"]
      ports:
        - "9411:9411"
      environment:
        - SPAN_STORAGE_TYPE=elasticsearch
        - ES_TAGS_AS_FIELDS_ALL=true
      restart: on-failure
      depends_on:
        - elasticsearch
  
   jaeger-query:
      image: jaegertracing/jaeger-query
      command: ["--es.num-shards=1", "--es.num-replicas=0", "--es.server-urls=http://elasticsearch:9200"]
      ports:
        - "16686:16686"
        - "16687"
      environment:
        - SPAN_STORAGE_TYPE=elasticsearch
        - ES_TAGS_AS_FIELDS_ALL=true
      restart: on-failure
      depends_on:
        - elasticsearch
  
   jaeger-agent:
      image: jaegertracing/jaeger-agent
      command: ["--reporter.grpc.host-port=jaeger-collector:14250", "--reporter.grpc.retry.max=1000"]
      ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "5778:5778"
      environment:
        - LOG_LEVEL=debug
      restart: on-failure
      depends_on:
        - jaeger-collector
  
   elasticsearch:
      container_name: es-container
      image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
      environment:
        - xpack.security.enabled=false
        - "discovery.type=single-node"
      ports:
        - 9200:9200

   loki:
      image: grafana/loki:latest
      container_name: grafana-loki
      command: -config.file=/etc/loki/loki-config.yaml
      restart: unless-stopped
      volumes:
            - ./configs/loki-config.yaml:/etc/loki/loki-config.yaml
      ports:
            - 127.0.0.1:3100:3100
      depends_on:
            - jaeger-agent
      environment:
            - JAEGER_AGENT_HOST=jaeger-agent
            - JAEGER_AGENT_PORT=6831
            - JAEGER_SAMPLER_TYPE=const
            - JAEGER_SAMPLER_PARAM=1
        
   grafana:
      image: grafana/grafana
      container_name: grafana
      restart: unless-stopped
      environment:
         - GF_AUTH_ANONYMOUS_ENABLED=true
         - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
         - GF_AUTH_DISABLE_LOGIN_FORM=true
      volumes:
            - ./configs/grafana-provisioning:/etc/grafana/provisioning
            - ./configs/grafana-dashboards/dashboard-docker-compose.json:/var/lib/grafana/dashboards/dashboard.json
      depends_on:
            - loki
            - elasticsearch
            - jaeger-agent
      ports:
            - 3000:3000
     
   producer: 
      container_name: producer
      image: ${EOS_IMAGE:-eos-boxed:latest}
      command:
         - ./wait-for-it.sh 
         - jaeger:9411
         - --
         - nodeos 
         - --enable-stale-production 
         - --producer-name=eosio              
         - --plugin=eosio::producer_plugin  
         - --config-dir
         - /etc/eosio
         - --telemetry-url=http://jaeger-collector:9411/api/v2/spans 
         - --telemetry-service-name=producer 
      depends_on:
         - jaeger-collector
         - loki 
      logging: *logging
      
   ship:
      container_name: ship
      image: ${EOS_IMAGE:-eos-boxed:latest}
      command:
         - ./wait-for-it.sh 
         - jaeger-collector:9411
         - --
         - nodeos               
         - --plugin=eosio::state_history_plugin                                   
         - --trace-history 
         - --chain-state-history 
         - --disable-replay-opts 
         - --validation-mode=light 
         - --p2p-peer-address=producer:9876:blk
         - --state-history-endpoint=0.0.0.0:8080
         - --config-dir=/etc/eosio
         - --telemetry-url=http://jaeger-collector:9411/api/v2/spans 
         - --telemetry-service-name=ship 
         - --send-mode=threaded_sync
      depends_on:
         - jaeger-collector
         - producer
         - loki 
      logging: *logging

   rodeos:
      container_name: rodeos
      image: ${EOS_IMAGE:-eos-boxed:latest}
      command: >
         /bin/sh -c "
            ./wait-for-it.sh jaeger-collector:9411 ## do not use wait-for-it.sh to wait for ship:8080, it would cause the the websocket listening endpoint to be in unrecoverable state. 
            sleep 10   
            rodeos --clone-connect-to=ship:8080 --data-dir=/var/rodeos/data --rdb-threads=12 --telemetry-url=http://jaeger-collector:9411/api/v2/spans --telemetry-service-name=rodeos --eos-vm-oc-cache-size-mb=200 --eos-vm-oc-compile-threads=8                 
         "       
      depends_on:
         - jaeger-collector
         - ship
         - loki 
      logging: *logging

   bootstrap:
      image: ${EOS_IMAGE:-eos-boxed:latest}
      command:
         - ./boot.sh 
      depends_on:
         - producer
         - loki 
      logging: *logging

